{"version":3,"sources":["../../../src/bot/lib/slackApiHelpers.js"],"names":[],"mappings":";;;;;QAYgB,wB,GAAA,wB;QAkCA,kC,GAAA,kC;;AA9ChB;;;;;;;;;;;;;;;;AAYO,SAAS,wBAAT,CAAkC,GAAlC,EAAuC,WAAvC,EAAoD;;AAE1D,SAAQ,GAAR,CAAY,0BAAZ;;AAEA,KAAI,CAAC,WAAD,IAAgB,CAAC,GAArB,EACC;;AAED,KAAI,GAAJ,CAAQ,KAAR,CAAc,IAAd,CAAmB;AACjB,YAAU;AADO,EAAnB,EAEI,UAAC,GAAD,EAAM,QAAN,EAAmB;;AAErB,UAAQ,GAAR,CAAY,oDAAZ;;AAFqB,MAIb,OAJa,GAID,QAJC,CAIb,OAJa,C;;AAMrB,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,QAAQ,MAA5B,EAAoC,GAApC,EAAyC;AACxC,OAAI,QAAQ,CAAR,EAAW,EAAX,IAAiB,WAArB,EAAkC;AACjC,QAAI,iBAAiB,EAArB;AACA,mBAAe,EAAf,GAAoB,QAAQ,CAAR,EAAW,EAA/B;AACA,mBAAe,QAAf,GAA0B,QAAQ,CAAR,EAAW,QAArC;AACA,mBAAe,SAAf,GAA2B,QAAQ,CAAR,EAAW,SAAtC;AACA,WAAO,cAAP;AACA;AACD;AAED,EAlBF;AAoBA;;;;;;;AAOM,SAAS,kCAAT,CAA4C,GAA5C,EAAiD;;AAEvD,KAAI,GAAJ,CAAQ,KAAR,CAAc,IAAd,CAAmB;AACjB,YAAU;AADO,EAAnB,EAEI,UAAC,GAAD,EAAM,QAAN,EAAmB;AAAA,MAEd,OAFc,GAEF,QAFE,CAEd,OAFc,C;;AAItB,UAAQ,GAAR,CAAY,wBAAZ;AACA,UAAQ,GAAR,CAAY,OAAZ;AACA,UAAQ,GAAR,CAAY,YAAZ;;AAEA,mBAAO,IAAP,CAAY,OAAZ,CAAoB,EAApB,EACC,IADD,CACM,UAAC,KAAD,EAAW;AAChB,OAAI,wBAAwB,MAAM,MAAlC;AACA,OAAI,QAAQ,CAAZ;AACA,OAAI,aAAa,CAAjB;AACA,WAAQ,OAAR,CAAgB,UAAC,MAAD,EAAY;AAC3B,QAAM,cAAc,OAAO,EAA3B;AACA,QAAM,WAAW,OAAO,IAAxB;AACA;AACA,QAAM,2CAAwC,wBAAwB,UAAhE,CAAN;;AAEA,qBAAO,SAAP,CAAiB,IAAjB,CAAsB;AACrB,YAAO,EAAE,wBAAF;AADc,KAAtB,EAEG,IAFH,CAEQ,UAAC,SAAD,EAAe;AACtB,SAAI,CAAC,SAAL,EAAgB;AACf,uBAAO,IAAP,CAAY,MAAZ,CAAmB;AAClB,mBADkB;AAElB;AAFkB,OAAnB,EAGG,IAHH,CAGQ,UAAC,IAAD,EAAU;AACjB,wBAAO,SAAP,CAAiB,MAAjB,CAAwB;AACvB,gCADuB;AAEvB,gBAAQ,KAAK,EAFU;AAGvB,YAAI,OAAO;AAHY,QAAxB;AAKA,OATD;AAUA,cAAQ,GAAR,0BAAmC,KAAnC;AACA;AACA;AACD,KAjBD;AAmBA,IAzBD;AA0BA,GA/BD;AAiCA,EA3CD;AA6CA","file":"slackApiHelpers.js","sourcesContent":["import models from '../../app/models';\n\n/**\n * \t\tHELPERS THAT DEAL WITH SLACK API CALLS\n */\n\n/**\n * get timezone for the user through slack API\n * @param  object bot the bot that is running...\n * @param  string slackUserID slack user id\n * @return {string}             timezone in format...\n */\nexport function getTimeZoneOffsetForUser(bot, slackUserID) {\n\n\tconsole.log(\"inside time offset user!\");\n\n\tif (!slackUserID || !bot)\n\t\treturn;\n\n\tbot.api.users.list({\n  \tpresence: 1\n  }, (err, response) => {\n\n  \tconsole.log(\"Called Users List inside getTimeZoneOffsetForUser!\");\n\n  \tconst { members } = response; // members are all users registered to your bot\n\n  \tfor (var i = 0; i < members.length; i++) {\n  \t\tif (members[i].id == slackUserID) {\n  \t\t\tvar timeZoneObject = {};\n  \t\t\ttimeZoneObject.tz = members[i].tz;\n  \t\t\ttimeZoneObject.tz_label = members[i].tz_label;\n  \t\t\ttimeZoneObject.tz_offset = members[i].tz_offset;\n  \t\t\treturn timeZoneObject;\n  \t\t}\n  \t};\n\n  });\n\n}\n\n/**\n * this will seed our database with our existing slack bot users\n * if this slack userID already exists in DB, will not re-seed\n * @param  {bot} bot our bot\n */\nexport function seedDatabaseWithExistingSlackUsers(bot) {\n\n\tbot.api.users.list({\n  \tpresence: 1\n  }, (err, response) => {\n\n\t\tconst { members } = response; // members are all users registered to your bot\n\n\t\tconsole.log(\"Seeding these members:\");\n\t\tconsole.log(members);\n\t\tconsole.log(\"\\n\\n\\n\\n\\n\");\n\t\t\n\t\tmodels.User.findAll({})\n\t\t.then((users) => {\n\t\t\tvar numberOfExistingUsers = users.length;\n\t\t\tvar count = 1;\n\t\t\tvar emailCount = 1;\n\t\t\tmembers.forEach((member) => {\n\t\t\t\tconst SlackUserId = member.id;\n\t\t\t\tconst nickName = member.name;\n\t\t\t\temailCount++;\n\t\t\t\tconst email = `TEMPEMAILHOLDER@TEMPORARY.COM${numberOfExistingUsers + emailCount}`;\n\n\t\t\t\tmodels.SlackUser.find({\n\t\t\t\t\twhere: { SlackUserId }\n\t\t\t\t}).then((slackUser) => {\n\t\t\t\t\tif (!slackUser) {\n\t\t\t\t\t\tmodels.User.create({\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tnickName\n\t\t\t\t\t\t}).then((user) => {\n\t\t\t\t\t\t\tmodels.SlackUser.create({\n\t\t\t\t\t\t\t\tSlackUserId,\n\t\t\t\t\t\t\t\tUserId: user.id,\n\t\t\t\t\t\t\t\ttz: member.tz\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(`Seeding user number ${count}...`);\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t});\n\t\t});\n\t\t\n\t});\n\n}"]}