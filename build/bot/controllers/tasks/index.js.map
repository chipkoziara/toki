{"version":3,"sources":["../../../../src/bot/controllers/tasks/index.js"],"names":[],"mappings":";;;;;;kBAiBe,UAAS,UAAT,EAAqB;;AAEnC,oBAAkB,UAAlB;AACA,yBAAwB,UAAxB;;;;;;AAMA,YAAW,EAAX,0BAAuC,UAAC,GAAD,EAAM,MAAN,EAAiB;AAAA,MAE/C,WAF+C,GAE/B,MAF+B,CAE/C,WAF+C;;;AAIvD,mBAAO,IAAP,CAAY,IAAZ,CAAiB;AAChB,UAAO,kCAAkC,WAAlC,CADS;AAEhB,YAAS,CACR,iBAAO,SADC;AAFO,GAAjB,EAMC,IAND,CAMM,UAAC,IAAD,EAAU;;;AAGf,OAAI,kBAAkB,wBAAS,QAAT,CAAkB,EAAlB,EAAsB,OAAtB,EAA+B,MAA/B,CAAsC,qBAAtC,CAAtB;;AAEA,QAAK,aAAL,CAAmB;AAClB,WAAO,2DAA2D,eAA3D,EAA4E,MAA5E,CADW;AAElB,aAAS,CAAE,iBAAO,IAAT,CAFS;AAGlB;AAHkB,IAAnB,EAKC,IALD,CAKM,UAAC,UAAD,EAAgB;;AAErB,QAAI,wBAAJ,CAA6B,EAAE,MAAM,WAAR,EAA7B,EAAoD,UAAC,GAAD,EAAM,KAAN,EAAgB;;AAEnE,kBAAa,oDAA+B,UAA/B,EAA2C,OAA3C,CAAb;AACA,SAAI,kBAAkB,mDAA8B,UAA9B,CAAtB;;AAEA,SAAI,WAAW,MAAX,IAAqB,CAAzB,EAA4B;AAC3B,YAAM,GAAN,CAAU,gDAAV;AACA,YAAM,GAAN,CAAU,sFAAV;AACA,MAHD,MAGO;AACN,YAAM,GAAN,CAAU,uCAAV;AACA,YAAM,GAAN,CAAU,eAAV;AACA;AACI,WAAM,EAAN,CAAS,KAAT,EAAgB,UAAC,KAAD,EAAW;AAC1B,cAAQ,GAAR,CAAY,mCAAZ;AACA,MAFD;AAGD,KAfL;AAiBA,IAxBD;AA0BA,GArCD;AAuCA,EA3CD;;AA6CA,YAAW,KAAX,CAAiB,CAAC,aAAD,CAAjB,EAAkC,gBAAlC,EAAoD,WAAI,KAAxD,EAA+D,UAAC,GAAD,EAAM,OAAN,EAAkB;;AAEhF,MAAM,cAAc,QAAQ,IAA5B;AACA,MAAI,UAAgB,QAAQ,OAA5B;;AAEA,MAAI,IAAJ,CAAS;AACR,SAAM,QADE;AAER,YAAS,QAAQ;AAFT,GAAT;;AAKA,aAAW,YAAM;AAChB,cAAW,OAAX,0BAA4C,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAA5C;AACA,GAFD,EAEG,IAFH;AAIA,EAdD;AAgBA,C;;AAvFD;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;AACA;;AAEA;;;;AACA;;;;;;AAEA,IAAM,cAAc,MAApB;;;AAyEC","file":"index.js","sourcesContent":["import os from 'os';\nimport { wit } from '../index';\nimport http from 'http';\nimport bodyParser from 'body-parser';\nimport moment from 'moment';\n\nimport models from '../../../app/models';\n\nimport { randomInt } from '../../lib/botResponses';\nimport { convertToSingleTaskObjectArray, convertArrayToTaskListMessage } from '../../lib/messageHelpers';\n\nimport addTaskController from './add';\nimport completeTasksController from './complete';\n\nconst FINISH_WORD = 'done';\n\n// base controller for tasks\nexport default function(controller) {\n\n\taddTaskController(controller);\n\tcompleteTasksController(controller);\n\n\t/**\n\t * \t\tYOUR DAILY TASKS\n\t */\n\t\n\tcontroller.on(`view_daily_tasks_flow`, (bot, config) => {\n\n\t\tconst { SlackUserId } = config;\n\n\t\tmodels.User.find({\n\t\t\twhere: [`\"SlackUser\".\"SlackUserId\" = ?`, SlackUserId ],\n\t\t\tinclude: [\n\t\t\t\tmodels.SlackUser\n\t\t\t]\n\t\t})\n\t\t.then((user) => {\n\n\t\t\t// temporary fix to get tasks\n\t\t\tvar timeAgoForTasks = moment().subtract(14, 'hours').format(\"YYYY-MM-DD HH:mm:ss\");\n\n\t\t\tuser.getDailyTasks({\n\t\t\t\twhere: [`\"DailyTask\".\"createdAt\" > ? AND \"DailyTask\".\"type\" = ?`, timeAgoForTasks, \"live\"],\n\t\t\t\tinclude: [ models.Task ],\n\t\t\t\torder: `\"DailyTask\".\"priority\" ASC`\n\t\t\t})\n\t\t\t.then((dailyTasks) => {\n\n\t\t\t\tbot.startPrivateConversation({ user: SlackUserId }, (err, convo) => {\n\n\t\t\t\t\tdailyTasks = convertToSingleTaskObjectArray(dailyTasks, \"daily\");\n\t\t\t\t\tvar taskListMessage = convertArrayToTaskListMessage(dailyTasks);\n\n\t\t\t\t\tif (dailyTasks.length == 0) {\n\t\t\t\t\t\tconvo.say(\"Looks like you don't have any tasks for today!\");\n\t\t\t\t\t\tconvo.say(\"Let me know if you want to `start your day` or `add tasks` to an existing day :memo:\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconvo.say(\"Here are your tasks for today :memo::\");\n\t\t\t\t\t\tconvo.say(taskListMessage);\n\t\t\t\t\t}\n          convo.on('end', (convo) => {\n          \tconsole.log(\"\\n\\n ~ view tasks finished ~ \\n\\n\");\n          });\n        });\n\n\t\t\t});\n\n\t\t})\n\n\t});\n\n\tcontroller.hears(['daily_tasks'], 'direct_message', wit.hears, (bot, message) => {\n\n\t\tconst SlackUserId = message.user;\n\t\tvar channel       = message.channel;\n\n\t\tbot.send({\n\t\t\ttype: \"typing\",\n\t\t\tchannel: message.channel\n\t\t});\n\n\t\tsetTimeout(() => {\n\t\t\tcontroller.trigger(`view_daily_tasks_flow`, [ bot, { SlackUserId } ]);\n\t\t}, 1000);\n\n\t});\n\n};"]}