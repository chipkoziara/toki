{"version":3,"sources":["../../../../src/bot/controllers/work_sessions/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import os from 'os';\nimport { wit } from '../index';\n\nimport models from '../../../app/models';\nimport moment from 'moment-timezone';\n\nimport endWorkSessionController from './endWorkSession';\nimport middleWorkSessionController from './middleWorkSession';\nimport startWorKSessionController from './startWorkSession';\n\nimport intentConfig from '../../lib/intents';\nimport { convertToSingleTaskObjectArray, convertArrayToTaskListMessage } from '../../lib/messageHelpers';\n\n// base controller for work sessions\nexport default function(controller) {\n\n\t/**\n\t * \t\tINDEX functions of work sessions\n\t */\n\t\n\tstartWorKSessionController(controller);\n\tmiddleWorkSessionController(controller);\n\tendWorkSessionController(controller);\n\n\t/**\n\t * \t\tIS_BACK (\"READY TO WORK\" - Peon WCIII)\n\t */\n\t\n\tcontroller.hears(['is_back'], 'direct_message', wit.hears, (bot, message) => {\n\n\t\tconst SlackUserId = message.user;\n\n\t\tbot.send({\n\t\t\ttype: \"typing\",\n\t\t\tchannel: message.channel\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\t// find user then reply\n\t\t\tmodels.User.find({\n\t\t\t\twhere: [`\"SlackUser\".\"SlackUserId\" = ?`, SlackUserId],\n\t\t\t\tinclude: [ models.SlackUser ]\n\t\t\t})\n\t\t\t.then((user) => {\n\n\t\t\t\t// temporary fix to get tasks\n\t\t\t\tvar timeAgoForTasks = moment().subtract(14, 'hours').format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t\t\tuser.getDailyTasks({\n\t\t\t\t\twhere: [`\"DailyTask\".\"createdAt\" > ? AND \"Task\".\"done\" = ? AND \"DailyTask\".\"type\" = ?`, timeAgoForTasks, false, \"live\"],\n\t\t\t\t\tinclude: [ models.Task ],\n\t\t\t\t\torder: `\"DailyTask\".\"priority\" ASC`\n\t\t\t\t})\n\t\t\t\t.then((dailyTasks) => {\n\n\t\t\t\t\tdailyTasks = convertToSingleTaskObjectArray(dailyTasks, \"daily\");\n\t\t\t\t\tvar taskListMessage = convertArrayToTaskListMessage(dailyTasks);\n\n\t\t\t\t\tbot.startConversation(message, (err, convo) => {\n\n\t\t\t\t\t\tconvo.isBack = {\n\t\t\t\t\t\t\tSlackUserId,\n\t\t\t\t\t\t\tisBackDecision: false // what user wants to do\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar name = user.nickName || user.email;\n\n\t\t\t\t\t\tconvo.say(`Welcome back, ${name}!`);\n\t\t\t\t\t\tif (dailyTasks.length > 0) {\n\t\t\t\t\t\t convo.say(`Here are your priorities from our last time together:\\n${taskListMessage}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar options = [\"• start a work session with your most recent priorities\", \"• view your tasks\", \"• add task(s)\", \"• end our day together\"];\n\t\t\t\t\t\tvar optionsList = \"\";\n\t\t\t\t\t\toptions.forEach((option) => {\n\t\t\t\t\t\t\toptionsList = `${optionsList}> ${option}\\n`;\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconvo.ask(`What would you like to do now? I can help you with any of these things:\\n${optionsList}`, (response, convo) => {\n\t\t\t\t\t\t\t// should eventually contain logic for 5 hour start_day vs start_session\n\t\t\t\t\t\t\tvar { intentObject: { entities } } = response;\n\t\t\t\t\t\t\tvar { intent }                     = entities;\n\t\t\t\t\t\t\tvar intentValue                    = (intent && intent[0]) ? intent[0].value : null;\n\n\t\t\t\t\t\t\tif (intentValue) {\n\t\t\t\t\t\t\t\tswitch(intentValue) {\n\t\t\t\t\t\t\t\t\tcase intentConfig.START_SESSION:\n\t\t\t\t\t\t\t\t\t\tconvo.isBackDecision = intentConfig.START_SESSION;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase intentConfig.END_DAY:\n\t\t\t\t\t\t\t\t\t\tconvo.isBackDecision = intentConfig.END_DAY;\n\t\t\t\t\t\t\t\t\t\tconvo.say(`It's about that time, isn't it?`);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase intentConfig.VIEW_TASKS:\n\t\t\t\t\t\t\t\t\t\tconvo.isBackDecision = intentConfig.VIEW_TASKS;\n\t\t\t\t\t\t\t\t\t\tconvo.say(`That sounds great. Let's decide what to do today! :tangerine:`);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase intentConfig.ADD_TASK:\n\t\t\t\t\t\t\t\t\t\tconvo.isBackDecision = intentConfig.ADD_TASK;\n\t\t\t\t\t\t\t\t\t\tconvo.say(`Awesome. Let's add some tasks :muscle:`);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconvo.say(`Totally cool, just let me know when you're ready to do either of those things! :wave:`);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconvo.next();\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconvo.on(`end`, (convo) => {\n\n\t\t\t\t\t\t\t// cancel all `break` and `work_session` type reminders\n\t\t\t\t\t\t\tuser.getReminders({\n\t\t\t\t\t\t\t\twhere: [ `\"open\" = ? AND \"type\" IN (?)`, true, [\"work_session\", \"break\"] ]\n\t\t\t\t\t\t\t}).\n\t\t\t\t\t\t\tthen((reminders) => {\n\t\t\t\t\t\t\t\treminders.forEach((reminder) => {\n\t\t\t\t\t\t\t\t\treminder.update({\n\t\t\t\t\t\t\t\t\t\t\"open\": false\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tconst { isBackDecision } = convo;\n\t\t\t\t\t\t\tvar config = { SlackUserId };\n\t\t\t\t\t\t\tif (convo.status == 'completed') {\n\t\t\t\t\t\t\t\tswitch (isBackDecision) {\n\t\t\t\t\t\t\t\t\tcase intentConfig.START_SESSION:\n\t\t\t\t\t\t\t\t\t\tconfig.intent = intentConfig.START_SESSION;\n\t\t\t\t\t\t\t\t\t\tcontroller.trigger(`new_session_group_decision`, [ bot, config ]);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase intentConfig.END_DAY:\n\t\t\t\t\t\t\t\t\t\tconfig.intent = intentConfig.END_DAY;\n\t\t\t\t\t\t\t\t\t\tcontroller.trigger(`new_session_group_decision`, [ bot, config ]);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase intentConfig.VIEW_TASKS:\n\t\t\t\t\t\t\t\t\t\tconfig.intent = intentConfig.VIEW_TASKS;\n\t\t\t\t\t\t\t\t\t\tcontroller.trigger(`new_session_group_decision`, [ bot, config ]);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase intentConfig.ADD_TASK:\n\t\t\t\t\t\t\t\t\t\tconfig.intent = intentConfig.ADD_TASK;\n\t\t\t\t\t\t\t\t\t\tcontroller.trigger(`new_session_group_decision`, [ bot, config ]);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbot.reply(message, \"Okay! Let me know when you want to start a session or day\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t})\n\n\t\t\t\t\n\t\t\t});\n\t\t}, 1000);\n\t\t\n\n\t});\n\n};"]}