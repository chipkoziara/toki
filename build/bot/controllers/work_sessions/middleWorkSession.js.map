{"version":3,"sources":["../../../../src/bot/controllers/work_sessions/middleWorkSession.js"],"names":[],"mappings":";;;;;;kBAOe,UAAS,UAAT,EAAqB;;;;;;;;;;;;AAYnC,YAAW,KAAX,CAAiB,CAAC,gBAAD,CAAjB,EAAqC,gBAArC,EAAuD,WAAI,KAA3D,EAAkE,UAAC,GAAD,EAAM,OAAN,EAAkB;;AAEnF,UAAQ,GAAR,CAAY,oBAAZ;AACA,UAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,QAAQ,YAAvB,CAAZ;;;AAHmF,8BAM3C,QAAQ,YAAR,CAAqB,QANsB;AAAA,MAM3E,gBAN2E,yBAM3E,gBAN2E;AAAA,MAMzD,SANyD,yBAMzD,SANyD;;AAOnF,MAAI,MAAM,+BAAV;;AAEA,UAAQ,GAAR,CAAY,wBAAZ;;;;;AAKA,MAAI,gBAAJ,EAAsB;;AAErB,OAAI,kBAAkB,CAAtB;AACA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,iBAAiB,MAArC,EAA6C,GAA7C,EAAkD;AACjD,uBAAmB,iBAAiB,CAAjB,EAAoB,UAApB,CAA+B,KAAlD;AACA;AACD,OAAI,kBAAkB,KAAK,KAAL,CAAW,kBAAkB,EAA7B,CAAtB;;AAEA,OAAI,eAAe,IAAI,GAAJ,CAAQ,eAAR,EAAyB,SAAzB,CAAnB;AACA,kBAAe,aAAa,MAAb,CAAoB,QAApB,CAAf;;AAEA,OAAI,KAAJ,CAAU,OAAV,aAA4B,eAA5B,kDAAwF,YAAxF;AAEA,GAbD,MAaO,IAAI,SAAJ,EAAe;;AAErB,OAAI,oBAAoB,UAAU,CAAV,EAAa,EAAb,CAAgB,KAAxC;AACA,uBAAwB,8BAAO,iBAAP,CAAxB,C;;AAEA,qBAAkB,GAAlB,CAAsB,kBAAkB,IAAlB,GAAyB,IAAI,SAAJ,EAA/C,EAAgE,SAAhE,E;;AAEA,OAAI,eAAe,kBAAkB,MAAlB,CAAyB,QAAzB,CAAnB;;AAEA,OAAI,KAAJ,CAAU,OAAV,wBAAuC,YAAvC;AAEA,GAXM,MAWA;;AAEN,OAAI,KAAJ,CAAU,OAAV;AACA;AAED,EA3CD;AA6CA,C;;AAhED;;;;AACA;;AACA;;;;AAEA;;;;;;AA4DC","file":"middleWorkSession.js","sourcesContent":["import os from 'os';\nimport { wit } from '../index';\nimport moment from 'moment-timezone';\n\nimport models from '../../../app/models';\n\n// MIDDLE OF A WORK SESSION\nexport default function(controller) {\n\n\t/**\n\t * \t\tDURING A WORK SESSION\n\t * \t\t\n\t * \t\textend work session\n\t * \t\tcross out tasks\n\t * \t\task how much time left\n\t * \t\t\n\t */\n\n\t// EXTEND AN EXISTING WORK SESSION\n\tcontroller.hears(['extend_session'], 'direct_message', wit.hears, (bot, message) => {\n\n\t\tconsole.log(\"extending session!\");\n\t\tconsole.log(JSON.stringify(message.intentObject));\n\n\t\t// these are array of objects\n\t\tconst { session_duration, extend_to } = message.intentObject.entities;\n\t\tvar now = moment();\n\n\t\tconsole.log(\"here extending session\");\n\t\t\n\t\t// var timezone = String(String(now.utc()._d).split(\"(\")[1]).split(\")\")[0];\n\n\t\t// this means user requested duration extension (i.e. 10 more minutes)\n\t\tif (session_duration) {\n\t\t\t\n\t\t\tvar durationSeconds = 0;\n\t\t\tfor (var i = 0; i < session_duration.length; i++) {\n\t\t\t\tdurationSeconds += session_duration[i].normalized.value;\n\t\t\t}\n\t\t\tvar durationMinutes = Math.floor(durationSeconds / 60);\n\n\t\t\tvar extendedTime = now.add(durationSeconds, 'seconds');\n\t\t\textendedTime = extendedTime.format('h:mm a');\n\n\t\t\tbot.reply(message, `Okay, ${durationMinutes} minutes added :timer_clock: . See you at ${extendedTime}!`);\n\n\t\t} else if (extend_to) {\n\n\t\t\tvar extendToTimestamp = extend_to[0].to.value;\n\t\t\textendToTimestamp     = moment(extendToTimestamp); // in PST because of Wit default settings\n\n\t\t\textendToTimestamp.add(extendToTimestamp._tzm - now.utcOffset(), 'minutes'); // convert from PST to local TZ\n\n\t\t\tvar extendedTime = extendToTimestamp.format('h:mm a');\n\n\t\t\tbot.reply(message, `Okay, see you at ${extendedTime} :timer_clock:!`);\n\n\t\t} else {\n\n\t\t\tbot.reply(message, `Sorry, didn't catch that. How long do you want to extend your session for?`);\n\t\t}\n\n\t});\n\n};"]}