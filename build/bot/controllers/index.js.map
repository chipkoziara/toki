{"version":3,"sources":["../../../src/bot/controllers/index.js"],"names":[],"mappings":";;;;;;QA8DgB,e,GAAA,e;QAwBA,gB,GAAA,gB;QAKA,c,GAAA,c;;AA3FhB;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAYA;;;;AAVA,QAAQ,QAAR,EAAkB,MAAlB;;;;;AAEA,IAAI,MAAM,QAAQ,GAAR,CAAY,QAAZ,IAAwB,aAAlC;AACA,IAAI,OAAO,aAAX,EAA0B;AACxB,UAAQ,GAAR,CAAY,mDAAZ;AACA,UAAQ,GAAR,CAAY,QAAZ,GAAuB,QAAQ,GAAR,CAAY,YAAnC;AACA,UAAQ,GAAR,CAAY,YAAZ,GAA2B,QAAQ,GAAR,CAAY,gBAAvC;AACD;;;;;;AAMD,IAAI,QAAQ,GAAR,CAAY,SAAhB,EAA2B;;AAEzB,UAAQ,GAAR,CAAY,eAAZ;AACA,MAAI,MAAM,qCAAI;AACZ,WAAO,QAAQ,GAAR,CAAY,SADP;AAEZ,wBAAoB;AAFR,GAAJ,CAAV;AAKD,CARD,MAQO;AACL,UAAQ,GAAR,CAAY,yCAAZ;AACA,UAAQ,IAAR,CAAa,CAAb;AACD;;QAEQ,G,GAAA,G;;;;;;AAMT,IAAI,aAAa,iBAAO,QAAP,EAAjB;;QAES,U,GAAA,U;;;;AAGT,IAAI,OAAO,EAAX;;AAEA,IAAI,CAAC,QAAQ,GAAR,CAAY,QAAb,IAAyB,CAAC,QAAQ,GAAR,CAAY,YAAtC,IAAsD,CAAC,QAAQ,GAAR,CAAY,IAAvE,EAA6E;AAC3E,UAAQ,GAAR,CAAY,8DAAZ;AACA,UAAQ,IAAR,CAAa,CAAb;AACD;;;AAGM,SAAS,eAAT,CAAyB,UAAzB,EAAqC;;;AAG1C,qBAAS,UAAT;AACA,mCAAuB,UAAvB;;;AAGA,sBAAe,UAAf;AACA,uBAAgB,UAAhB;AACA,+BAAuB,UAAvB;AACA,yCAAwB,UAAxB;AACA,2BAAoB,UAApB;AACD;;;AAGD,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,OAAK,IAAI,MAAJ,CAAW,KAAhB,IAAyB,GAAzB;AACD;;;;;;;AAOM,SAAS,gBAAT,CAA0B,WAA1B,EAAuC;AAC5C,MAAI,MAAM,WAAW,KAAX,CAAiB,WAAjB,CAAV;AACA,aAAW,OAAX,CAAmB,YAAnB,EAAiC,CAAC,GAAD,EAAM,WAAN,CAAjC;AACD;;AAEM,SAAS,cAAT,CAAwB,WAAxB,EAAqC;AAC1C,MAAI,MAAM,WAAW,KAAX,CAAiB,WAAjB,CAAV;AACA,aAAW,OAAX,CAAmB,WAAnB,EAAgC,CAAC,GAAD,EAAM,WAAN,CAAhC;AACD;;;AAGD,WAAW,EAAX,CAAc,YAAd,EAA4B,UAAC,GAAD,EAAK,IAAL,EAAc;;AAExC,MAAI,KAAK,IAAI,MAAJ,CAAW,KAAhB,CAAJ,EAA4B;;AAE1B,YAAQ,GAAR,CAAY,6BAAZ;AACD,GAHD,MAGO;AACL,QAAI,QAAJ,CAAa,UAAC,GAAD,EAAS;AACpB,UAAI,CAAC,GAAL,EAAU;AACR,gBAAQ,GAAR,CAAY,sBAAZ;AACA,wBAAgB,UAAhB;AACA,iBAAS,GAAT;AACA,mBAAW,QAAX,CAAoB,IAApB,EAA0B,UAAC,GAAD,EAAM,EAAN,EAAa;AACrC,cAAI,GAAJ,EAAS;AACP,oBAAQ,GAAR,CAAY,mBAAZ;AACD,WAFD,MAGK;AACH,oBAAQ,GAAR,CAAY,UAAU,KAAK,IAAf,GAAsB,QAAlC;AACD;AACF,SAPD;AAQA,0DAAiC,GAAjC,EAAsC,IAAtC;AACD,OAbD,MAaO;AACL,gBAAQ,GAAR,CAAY,YAAZ;AACD;AACF,KAjBD;AAkBD;AACF,CAzBD;;;AA4BA,WAAW,EAAX,CAAc,WAAd,EAA2B,UAAC,GAAD,EAAK,IAAL,EAAc;;AAEvC,MAAI,KAAK,IAAI,MAAJ,CAAW,KAAhB,CAAJ,EAA4B;;AAE1B,YAAQ,GAAR,CAAY,6BAAZ;AACD,GAHD,MAGO;AACL,QAAI,QAAJ,CAAa,UAAC,GAAD,EAAS;AACpB,UAAI,CAAC,GAAL,EAAU;AACR,gBAAQ,GAAR,CAAY,sBAAZ;AACA,wBAAgB,GAAhB;AACA,iBAAS,GAAT;AACA,mBAAW,QAAX,CAAoB,IAApB,EAA0B,UAAC,GAAD,EAAM,EAAN,EAAa;AACrC,cAAI,GAAJ,EAAS;AACP,oBAAQ,GAAR,CAAY,mBAAZ;AACD,WAFD,MAGK;AACH,oBAAQ,GAAR,CAAY,UAAU,KAAK,IAAf,GAAsB,QAAlC;AACD;AACF,SAPD;AAQA,mDAA0B,GAA1B,EAA+B,IAA/B;AACD,OAbD,MAaO;AACL,gBAAQ,GAAR,CAAY,YAAZ;AACA,gBAAQ,GAAR,CAAY,GAAZ;AACD;AACF,KAlBD;AAmBD;AACF,CA1BD;;;AA6BA,WAAW,OAAX,CAAmB,KAAnB,CAAyB,GAAzB,CAA6B,UAAS,GAAT,EAAa,KAAb,EAAoB;;AAE/C,UAAQ,GAAR,CAAY,KAAZ;;AAEA,MAAI,GAAJ,EAAS;AACP,UAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;;;AAGD,OAAK,IAAI,CAAT,IAAe,KAAf,EAAsB;AACpB,QAAI,MAAM,CAAN,EAAS,GAAb,EAAkB;AAChB,UAAI,MAAM,WAAW,KAAX,CAAiB,MAAM,CAAN,CAAjB,EAA2B,QAA3B,CAAoC,UAAS,GAAT,EAAc;AAC1D,YAAI,GAAJ,EAAS;AACP,kBAAQ,GAAR,CAAY,gCAAZ,EAA6C,GAA7C;AACD,SAFD,MAEO;AACL,mBAAS,GAAT;AACD;AACF,OANS,CAAV;AAOD;AACF;AAEF,CArBD;;;;;;;AA4BA,WAAW,KAAX,CAAiB,CAAC,EAAD,CAAjB,EAAuB,gBAAvB,EAAyC,IAAI,KAA7C,EAAoD,UAAC,GAAD,EAAM,OAAN,EAAkB;;AAEpE,UAAQ,GAAR,CAAY,qCAAZ;AACA,UAAQ,GAAR,CAAY,OAAZ;;;AAGA,MAAI,CAAC,QAAQ,cAAb,EAA6B;AAC3B,QAAI,KAAJ,CAAU,OAAV,EAAmB,4FAAnB;;AAEA,QAAI,UAAU,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,mBAAnC,EAAwD,gBAAxD,EAA0E,qBAA1E,EAAiG,yBAAjG,EAA4H,cAA5H,EAA4I,4DAA5I,CAAd;AACA,QAAI,cAAc,KAAlB;AACA,YAAQ,OAAR,CAAgB,UAAC,MAAD,EAAY;AAC1B,yBAAiB,WAAjB,GAA+B,MAA/B;AACD,KAFD;AAGA,kBAAiB,WAAjB;;AAEA,QAAI,KAAJ,CAAU,OAAV,EAAmB,WAAnB;AACD;AAEF,CAnBD;;;;;;;;AA2BA,WAAW,EAAX,+BAA4C,UAAC,GAAD,EAAM,MAAN,EAAiB;;;AAAA,MAGnD,WAHmD,GAG3B,MAH2B,CAGnD,WAHmD;AAAA,MAGtC,MAHsC,GAG3B,MAH2B,CAGtC,MAHsC;;;AAK3D,mBAAO,IAAP,CAAY,IAAZ,CAAiB;AACf,WAAO,kCAAkC,WAAlC,CADQ;AAEf,aAAS,CAAE,iBAAO,SAAT;AAFM,GAAjB,EAIC,IAJD,CAIM,UAAC,IAAD,EAAU;;AAEd,QAAI,OAAW,KAAK,QAAL,IAAiB,KAAK,KAArC;AACA,QAAM,SAAS,KAAK,EAApB;;;AAGA,SAAK,gBAAL,CAAsB;AACpB,8CADoB;AAEpB,aAAO;AAFa,KAAtB,EAIC,IAJD,CAIM,UAAC,aAAD,EAAmB;;AAEvB,cAAQ,GAAR,CAAY,mDAAZ;AACA,cAAQ,GAAR,CAAY,oEAAZ;AACA,cAAQ,GAAR,CAAY,8BAAZ;AACA,cAAQ,GAAR,CAAY,MAAZ;AACA,cAAQ,GAAR,CAAY,UAAZ;;;AAGA,UAAI,iBAAiB,KAArB;AACA,UAAI,cAAc,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,yBAAiB,IAAjB;AACD,OAFD,MAEO,IAAI,cAAc,CAAd,KAAoB,cAAc,CAAd,EAAiB,IAAjB,IAAyB,UAAjD,EAA6D;AAClE,yBAAiB,IAAjB;AACD;AACD,UAAI,cAAJ,EAAoB;AAClB,YAAI,wBAAJ,CAA6B,EAAE,MAAM,WAAR,EAA7B,EAAoD,UAAC,GAAD,EAAM,KAAN,EAAgB;AAClE,gBAAM,GAAN,CAAU,uCAAV;AACA,gBAAM,IAAN;AACA,gBAAM,EAAN,CAAS,KAAT,EAAgB,UAAC,KAAD,EAAW;AACzB,uBAAW,OAAX,yBAA2C,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAA3C;AACD,WAFD;AAGD,SAND;AAOA;AACD;;;AAGD,UAAI,eAAe,IAAI,IAAJ,CAAS,gCAAS,QAAT,CAAkB,CAAlB,EAAqB,OAArB,CAAT,CAAnB;AACA,WAAK,eAAL,CAAqB;AACnB,eAAO,gCAAgC,YAAhC;AADY,OAArB,EAGC,IAHD,CAGM,UAAC,YAAD,EAAkB;;;AAGtB,YAAI,aAAa,MAAb,GAAsB,CAA1B,EAA6B;;AAE3B,kBAAQ,MAAR;AACE,iBAAK,kBAAa,QAAlB;AACE,yBAAW,OAAX,kBAAoC,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAApC;AACA;AACF,iBAAK,kBAAa,aAAlB;AACE,yBAAW,OAAX,wBAA0C,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAA1C;AACA;AACF,iBAAK,kBAAa,UAAlB;AACE,yBAAW,OAAX,0BAA4C,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAA5C;AACA;AACF,iBAAK,kBAAa,OAAlB;AACE,yBAAW,OAAX,oBAAsC,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAAtC;AACA;AACF;AAAS;AAbX;AAeA;AACD;;AAED,YAAI,wBAAJ,CAA8B,EAAE,MAAM,WAAR,EAA9B,EAAqD,UAAC,GAAD,EAAM,KAAN,EAAgB;;AAEnE,gBAAM,IAAN,GAAa,IAAb;AACA,gBAAM,eAAN,GAAwB;AACtB,sBAAU,K;AADY,WAAxB;;AAIA,gBAAM,GAAN,UAAiB,IAAjB;AACA,gBAAM,GAAN,CAAU,uHAAV,EAAmI,UAAC,QAAD,EAAW,KAAX,EAAqB;;AAEtJ,gBAAI,kBAAkB,SAAS,IAA/B;;;;;AAKA,gBAAI,WAAW,IAAI,MAAJ,CAAW,4BAAX,CAAf,C;AACA,gBAAI,eAAe,IAAI,MAAJ,CAAW,kBAAX,CAAnB,C;;AAEA,gBAAI,SAAS,IAAT,CAAc,eAAd,CAAJ,EAAoC;;AAElC,oBAAM,GAAN,CAAU,sCAAV;AACA,oBAAM,eAAN,CAAsB,QAAtB,GAAiC,kBAAa,SAA9C;AACD,aAJD,MAIO,IAAI,aAAa,IAAb,CAAkB,eAAlB,CAAJ,EAAwC;;AAE7C,oBAAM,GAAN,CAAU,oCAAV;AACA,oBAAM,eAAN,CAAsB,QAAtB,GAAiC,MAAjC;AACD,aAJM,MAIA;;AAEL,oBAAM,GAAN,CAAU,8CAAV;AACD;AACD,kBAAM,IAAN;AACD,WAvBD;;AA0BA,gBAAM,EAAN,CAAS,KAAT,EAAgB,UAAC,KAAD,EAAW;;AAEzB,oBAAQ,GAAR,CAAY,gCAAZ;AAFyB,gBAGjB,eAHiB,GAGG,KAHH,CAGjB,eAHiB;;;AAKzB,gBAAI,gBAAgB,QAAhB,IAA4B,kBAAa,SAA7C,EAAwD;AACtD,yBAAW,OAAX,mBAAqC,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAArC;AACA;AACD,aAHD,MAGO;AACL,sBAAQ,MAAR;AACE,qBAAK,kBAAa,QAAlB;AACE,6BAAW,OAAX,kBAAoC,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAApC;AACA;AACF,qBAAK,kBAAa,aAAlB;AACE,6BAAW,OAAX,wBAA0C,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAA1C;AACA;AACF,qBAAK,kBAAa,UAAlB;AACE,6BAAW,OAAX,0BAA4C,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAA5C;AACA;AACF,qBAAK,kBAAa,OAAlB;AACE,6BAAW,OAAX,oBAAsC,CAAE,GAAF,EAAO,EAAE,wBAAF,EAAP,CAAtC;AACA;AACF;AAAS;AAbX;AAeD;AAEF,WA1BD;AA4BD,SA9DD;AA+DD,OAzFD;AA0FD,KA1HD;AA2HD,GArID;AAsID,CA3ID","file":"index.js","sourcesContent":["import Botkit from 'botkit';\nimport os from 'os';\nimport Wit from 'botkit-middleware-witai';\nimport moment from 'moment-timezone';\n\n// config modules\nimport tasksController from './tasks';\nimport workSessionsController from './work_sessions';\nimport remindersController from './reminders';\nimport daysController from './days';\nimport setupBot from '../bot';\nimport setupReceiveMiddleware from '../middleware/receiveMiddleware';\nimport miscellaneousController from './miscellaneousController';\n\nimport models from '../../app/models';\nimport intentConfig from '../lib/intents';\n\nrequire('dotenv').config();\n\nvar env = process.env.NODE_ENV || 'development';\nif (env == 'development') {\n  console.log(\"\\n\\n ~~ In development controller of Navi ~~ \\n\\n\");\n  process.env.SLACK_ID = process.env.DEV_SLACK_ID;\n  process.env.SLACK_SECRET = process.env.DEV_SLACK_SECRET;\n}\n\n// actions\nimport { firstInstallInitiateConversation, loginInitiateConversation } from '../actions/initiation';\n\n// Wit Brain\nif (process.env.WIT_TOKEN) {\n\n  console.log(\"Integrate Wit\");\n  var wit = Wit({\n    token: process.env.WIT_TOKEN,\n    minimum_confidence: 0.55\n  });\n  \n} else {\n  console.log('Error: Specify WIT_TOKEN in environment');\n  process.exit(1);\n}\n\nexport { wit };\n\n/**\n *      ***  CONFIG  ****\n */\n\nvar controller = Botkit.slackbot();\n\nexport { controller };\n\n// simple way to keep track of bots\nvar bots = {};\n\nif (!process.env.SLACK_ID || !process.env.SLACK_SECRET || !process.env.PORT) {\n  console.log('Error: Specify SLACK_ID SLACK_SECRET and PORT in environment');\n  process.exit(1);\n}\n\n// Custom Navi Config\nexport function customConfigBot(controller) {\n\n  // beef up the bot\n  setupBot(controller);\n  setupReceiveMiddleware(controller);\n\n  // add controller functionalities\n  daysController(controller);\n  tasksController(controller);\n  workSessionsController(controller);\n  miscellaneousController(controller);\n  remindersController(controller);\n}\n\n// try to avoid repeat RTM's\nfunction trackBot(bot) {\n  bots[bot.config.token] = bot;\n}\n\n/**\n *      ***  TURN ON THE BOT  ****\n *         VIA SIGNUP OR LOGIN\n */\n\nexport function connectOnInstall(team_config) {\n  var bot = controller.spawn(team_config);\n  controller.trigger('create_bot', [bot, team_config]);\n}\n\nexport function connectOnLogin(team_config) {\n  var bot = controller.spawn(team_config);\n  controller.trigger('login_bot', [bot, team_config]);\n}\n\n// upon install\ncontroller.on('create_bot', (bot,team) => {\n\n  if (bots[bot.config.token]) {\n    // already online! do nothing.\n    console.log(\"already online! do nothing.\")\n  } else {\n    bot.startRTM((err) => {\n      if (!err) {\n        console.log(\"RTM on and listening\");\n        customConfigBot(controller);\n        trackBot(bot);\n        controller.saveTeam(team, (err, id) => {\n          if (err) {\n            console.log(\"Error saving team\")\n          }\n          else {\n            console.log(\"Team \" + team.name + \" saved\")\n          }\n        })\n        firstInstallInitiateConversation(bot, team);\n      } else {\n        console.log(\"RTM failed\")\n      }\n    });\n  }\n});\n\n// subsequent logins\ncontroller.on('login_bot', (bot,team) => {\n\n  if (bots[bot.config.token]) {\n    // already online! do nothing.\n    console.log(\"already online! do nothing.\")\n  } else {\n    bot.startRTM((err) => {\n      if (!err) {\n        console.log(\"RTM on and listening\");\n        customConfigBot(bot);\n        trackBot(bot);\n        controller.saveTeam(team, (err, id) => {\n          if (err) {\n            console.log(\"Error saving team\")\n          }\n          else {\n            console.log(\"Team \" + team.name + \" saved\")\n          }\n        })\n        loginInitiateConversation(bot, team);\n      } else {\n        console.log(\"RTM failed\")\n        console.log(err);\n      }\n    });\n  }\n});\n\n//DIALOG\ncontroller.storage.teams.all(function(err,teams) {\n\n  console.log(teams)\n\n  if (err) {\n    throw new Error(err);\n  }\n\n  // connect all teams with bots up to slack!\n  for (var t  in teams) {\n    if (teams[t].bot) {\n      var bot = controller.spawn(teams[t]).startRTM(function(err) {\n        if (err) {\n          console.log('Error connecting bot to Slack:',err);\n        } else {\n          trackBot(bot);\n        }\n      });\n    }\n  }\n\n});\n\n/**\n *      CATCH ALL BUCKET FOR WIT INTENTS\n */\n\n// this will send message if no other intent gets picked up\ncontroller.hears([''], 'direct_message', wit.hears, (bot, message) => {\n\n  console.log(\"\\n\\n\\n ~~ in back up area ~~ \\n\\n\\n\");\n  console.log(message);\n\n  // this means that user said something that we cannot handle yet\n  if (!message.selectedIntent) {\n    bot.reply(message, \"Hey! I can only help you with a few things. Here's the list of things I can help you with:\");\n\n    var options = ['start a day', 'start a session', 'end session early', 'set a reminder', 'view your task list', 'add a task to your list', 'end your day', 'return to session and forget this interaction ever occured'];\n    var optionsList = \"```\";\n    options.forEach((option) => {\n      optionsList = `${optionsList}${option}\\n`\n    })\n    optionsList = `${optionsList}\\`\\`\\``\n\n    bot.reply(message, optionsList);\n  }\n\n});\n\n/**\n *      CATCH FOR WHETHER WE SHOULD START\n *        A NEW SESSION GROUP (AKA A NEW DAY) OR NOT\n *    1) if have not started day yet, then this will get triggered\n *    2) if it has been 5 hours, then this will get this trigger\n */\ncontroller.on(`new_session_group_decision`, (bot, config) => {\n\n  // type is either `ADD_TASK` or `START_SESSION`\n  const { SlackUserId, intent } = config;\n\n  models.User.find({\n    where: [`\"SlackUser\".\"SlackUserId\" = ?`, SlackUserId ],\n    include: [ models.SlackUser ]\n  })\n  .then((user) => {\n\n    var name     = user.nickName || user.email;\n    const UserId = user.id;\n\n    // 1. has user started day yet?\n    user.getSessionGroups({\n      order: `\"SessionGroup\".\"createdAt\" DESC`,\n      limit: 1\n    })\n    .then((sessionGroups) => {\n\n      console.log(\"\\n\\n\\n ~~ IN NEW SESSION GROUP DECISION ~~ \\n\\n\\n\");\n      console.log(\"\\n\\n\\n ~~ this is the dispatch center for many decisions ~~ \\n\\n\\n\");\n      console.log(\"\\n\\n\\n config object: \\n\\n\\n\");\n      console.log(config);\n      console.log(\"\\n\\n\\n\\n\");\n\n      // should start day and everything past this is irrelevant\n      var shouldStartDay = false;\n      if (sessionGroups.length == 0) {\n        shouldStartDay = true;\n      } else if (sessionGroups[0] && sessionGroups[0].type == \"end_work\") {\n        shouldStartDay = true;\n      }\n      if (shouldStartDay) {\n        bot.startPrivateConversation({ user: SlackUserId }, (err, convo) => {\n          convo.say(\"Wait, you have not started a day yet!\");\n          convo.next();\n          convo.on('end', (convo) => {\n            controller.trigger(`user_confirm_new_day`, [ bot, { SlackUserId }]);\n          });\n        });\n        return;\n      }\n\n      // 2. you have already `started your day`, but it's been 5 hours since working with me\n      var fiveHoursAgo = new Date(moment().subtract(5, 'hours'));\n      user.getWorkSessions({\n        where: [`\"WorkSession\".\"endTime\" > ?`, fiveHoursAgo]\n      })\n      .then((workSessions) => {\n\n        // you have had at least one work session in the last 5 hours\n        if (workSessions.length > 0) {\n          // you have had a recent work session and are ready to just get passed through\n          switch (intent) {\n            case intentConfig.ADD_TASK:\n              controller.trigger(`add_task_flow`, [ bot, { SlackUserId }]);\n              break;\n            case intentConfig.START_SESSION:\n              controller.trigger(`confirm_new_session`, [ bot, { SlackUserId } ]);\n              break;\n            case intentConfig.VIEW_TASKS:\n              controller.trigger(`view_daily_tasks_flow`, [ bot, { SlackUserId } ]);\n              break;\n            case intentConfig.END_DAY:\n              controller.trigger(`trigger_day_end`, [ bot, { SlackUserId } ]);\n              break;\n            default: break;\n          }\n          return;\n        }\n\n        bot.startPrivateConversation ({ user: SlackUserId }, (err, convo) => {\n\n          convo.name = name;\n          convo.newSessionGroup = {\n            decision: false // for when you want to end early\n          };\n\n          convo.say(`Hey ${name}! It's been a while since we worked together`);\n          convo.ask(\"If your priorities changed, I recommend that you `start your day` to kick the tires :car:, otherwise let's `continue`\", (response, convo) => {\n\n            var responseMessage = response.text;\n\n            // 1. `start your day`\n            // 2. `add a task`\n            // 3. anything else will exit\n            var startDay = new RegExp(/(((^st[tart]*))|(^d[ay]*))/); // `start` or `day`\n            var letsContinue = new RegExp(/((^co[ntinue]*))/); // `add` or `task`\n\n            if (startDay.test(responseMessage)) {\n              // start new day\n              convo.say(\"Got it. Let's do it! :weight_lifter:\");\n              convo.newSessionGroup.decision = intentConfig.START_DAY;\n            } else if (letsContinue.test(responseMessage)) {\n              // continue with add task flow\n              convo.say(\"Got it. Let's continue on :muscle:\");\n              convo.newSessionGroup.decision = intent;\n            } else {\n              // default is to exit this conversation entirely\n              convo.say(\"Okay! I'll be here for whenever you're ready\");\n            }\n            convo.next();\n          });\n\n          \n          convo.on('end', (convo) => {\n\n            console.log(\"end of start new session group\");\n            const { newSessionGroup } = convo;\n\n            if (newSessionGroup.decision == intentConfig.START_DAY) {\n              controller.trigger(`begin_day_flow`, [ bot, { SlackUserId }]);\n              return;\n            } else {\n              switch (intent) {\n                case intentConfig.ADD_TASK:\n                  controller.trigger(`add_task_flow`, [ bot, { SlackUserId }]);\n                  break;\n                case intentConfig.START_SESSION:\n                  controller.trigger(`confirm_new_session`, [ bot, { SlackUserId } ]);\n                  break;\n                case intentConfig.VIEW_TASKS:\n                  controller.trigger(`view_daily_tasks_flow`, [ bot, { SlackUserId } ]);\n                  break;\n                case intentConfig.END_DAY:\n                  controller.trigger(`trigger_day_end`, [ bot, { SlackUserId } ]);\n                  break;\n                default: break;\n              }\n            }\n\n          });\n\n        });\n      });\n    });\n  });\n});\n\n"]}