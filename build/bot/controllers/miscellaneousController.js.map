{"version":3,"sources":["../../../src/bot/controllers/miscellaneousController.js"],"names":[],"mappings":"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","file":"miscellaneousController.js","sourcesContent":["import os from 'os';\nimport { numberLessThanTen, numberGreaterThanTen } from '../middleware/hearMiddleware';\nimport { helloResponse, randomInt } from '../lib/botResponses';\nimport { wit } from './index';\n\n// MISC functionalities\n// easter eggs, fun things, non-important (like saying hello)\nexport default function(controller) {\n\n\t// TEST\n\tcontroller.on('test_message_send', (bot, userID, message) => {\n\n\t  bot.startPrivateConversation({user: userID}, (err, convo) => {\n\t    convo.say(message);\n\t  });\n\n\t});\n\n\tcontroller.on('user_typing', (bot, message) => {\n\t\tconsole.log(\"user is typing!\");\n\t});\n\n\tcontroller.hears(['^(kevin)$', '^(kev[in]*)$'], 'direct_message', (bot, message) => {\n\n\t\tbot.api.reactions.add({\n\t\t\ttimestamp: message.ts,\n\t\t\tchannel: message.channel,\n\t\t\tname: 'heart',\n\t\t}, (err, res) => {\n\t\t\tconsole.log(\"added reaction!\");\n\t\t\tconsole.log(res);\n\t\t\tif (err) {\n\t\t\t\tbot.botkit.log('Failed to add emoji reaction :(', err);\n\t\t\t}\n\t\t})\n\n\t});\n\n\t// messing around w/ custom hear middleware\n\tcontroller.hears(controller.utterances.hears.number, 'direct_message', numberLessThanTen, (bot, message) => {\n\t\t\tbot.reply(message, \"That is a number less than 10!\");\n\t});\n\tcontroller.hears(controller.utterances.hears.number, 'direct_message', numberGreaterThanTen, (bot, message) => {\n\t\t\tbot.reply(message, \"That is a number greater than 10!\");\n\t});\n\n\tcontroller.hears([\"^chip$\"], 'direct_message', (bot, message) => {\n\n\t\tbot.api.reactions.add({\n\t\t\ttimestamp: message.ts,\n\t\t\tchannel: message.channel,\n\t\t\tname: 'cookie',\n\t\t}, (err, res) => {\n\t\t\tconsole.log(\"added reaction!\");\n\t\t\tconsole.log(res);\n\t\t\tif (err) {\n\t\t\t\tbot.botkit.log('Failed to add emoji reaction :(', err);\n\t\t\t}\n\t\t});\n\n\t\tbot.send({\n        type: \"typing\",\n        channel: message.channel\n    });\n    setTimeout(()=>{\n    \tbot.reply(message, \"Chip, as in... Chocolate chip?\");\n    }, randomInt(500, 1500));\n\n\t});\n\n\tcontroller.hears(controller.utterances.hears.hello, 'direct_message', function (bot, message) {\n\n\t\tbot.api.reactions.add({\n\t\t\ttimestamp: message.ts,\n\t\t\tchannel: message.channel,\n\t\t\tname: 'wave'\n\t\t}, function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tbot.botkit.log('Failed to add emoji reaction :(', err);\n\t\t\t}\n\t\t});\n\n\t\tcontroller.storage.users.get(message.user, function (err, user) {\n\t\t\tif (user && user.name) {\n\t\t\t\tbot.reply(message, 'Hello ' + user.name + '!!');\n\t\t\t} else {\n\t\t\t\tvar response = helloResponse();\n\t\t\t\tbot.send({\n        \ttype: \"typing\",\n        \tchannel: message.channel\n\t\t    });\n\t\t    setTimeout(()=>{\n\t\t    \tbot.reply(message, response);\n\t\t    }, randomInt(500, 1500));\n\t\t\t}\n\t\t});\n\t});\n\n\t/**\n\t * \t\tBOTKIT EXAMPLE CODE\n\t */\n\n\tcontroller.hears([\"let's start a (.*) conversation about (.*)\"], [\"direct_message\"], (bot, message) => {\n\t\tvar adjective = message.match[1];\n\t\tvar topic = message.match[2];\n\t\tbot.startConversation(message, (err, convo) => {\n\t\t\tconvo.say(`You want a ${adjective} type of conversation`);\n\t\t\tconvo.say(`And you want to talk about ${topic}!`);\n\t\t})\n\t});\n\n\tcontroller.hears(['call me (.*)', 'my name is (.*)'], 'direct_message,direct_mention,mention', function(bot, message) {\n\t    var name = message.match[1];\n\t    controller.storage.users.get(message.user, function(err, user) {\n\t        if (!user) {\n\t            user = {\n\t                id: message.user,\n\t            };\n\t        }\n\t        user.name = name;\n\t        controller.storage.users.save(user, function(err, id) {\n\t            bot.reply(message, 'Got it. I will call you ' + user.name + ' from now on.');\n\t        });\n\t    });\n\t});\n\n\tcontroller.hears(['what is my name', 'who am i'], 'direct_message', function(bot, message) {\n\n\t    controller.storage.users.get(message.user, function(err, user) {\n\t        if (user && user.name) {\n\t            bot.reply(message, 'Your name is ' + user.name);\n\t        } else {\n\t            bot.startConversation(message, function(err, convo) {\n\t                if (!err) {\n\t                    convo.say('I do not know your name yet!');\n\t                    convo.ask('What should I call you?', function(response, convo) {\n\t                    \tconsole.log(\"inside of first question CB\");\n\t                    \tconsole.log(convo);\n\t                        convo.ask('You want me to call you `' + response.text + '`?', [\n\t                            {\n\t                                pattern: 'yes',\n\t                                callback: function(response, convo) {\n\t                                    // since no further messages are queued after this,\n\t                                    // the conversation will end naturally with status == 'completed'\n\t                                    console.log(`inside of second question CB that you answered yes to: ${response.text}`);\n\t                                    console.log(response);\n\t                                    console.log(convo);\n\t                                    convo.next();\n\t                                }\n\t                            },\n\t                            {\n\t                                pattern: 'no',\n\t                                callback: function(response, convo) {\n\t                                    // stop the conversation. this will cause it to end with status == 'stopped'\n\t                                    convo.stop();\n\t                                }\n\t                            },\n\t                            {\n\t                                default: true,\n\t                                callback: function(response, convo) {\n\t                                    convo.repeat();\n\t                                    convo.next();\n\t                                }\n\t                            }\n\t                        ]);\n\n\t                        convo.next();\n\n\t                    }, {'key': 'nickname'}); // store the results in a field called nickname\n\n\t                    convo.on('end', function(convo) {\n\t                    \tconsole.log(\"convo is done...\");\n\t                    \tconsole.log(convo);\n\t                        if (convo.status == 'completed') {\n\t                            bot.reply(message, 'OK! I will update my dossier...');\n\n\t                            controller.storage.users.get(message.user, function(err, user) {\n\t                                if (!user) {\n\t                                    user = {\n\t                                        id: message.user,\n\t                                    };\n\t                                }\n\t                                var responses = convo.extractResponses(); // returns the JS object of key:values. If you don't specify, the key will be string of your question. the value is an object with text property being the user's response\n\t                                console.log(\"This convo's responses are:\");\n\t                                console.log(responses);\n\t                                user.name = convo.extractResponse('nickname');\n\t                                controller.storage.users.save(user, function(err, id) {\n\t                                    bot.reply(message, 'Got it. I will call you ' + user.name + ' from now on.');\n\t                                });\n\t                            });\n\n\n\n\t                        } else {\n\t                            // this happens if the conversation ended prematurely for some reason\n\t                            bot.reply(message, 'OK, nevermind!');\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t        }\n\t    });\n\t});\n\n\n\tcontroller.hears(['shutdown'], 'direct_message,direct_mention,mention', function(bot, message) {\n\n\t    bot.startConversation(message, function(err, convo) {\n\n\t        convo.ask('Are you sure you want me to shutdown?', [\n\t            {\n\t                pattern: bot.utterances.yes,\n\t                callback: function(response, convo) {\n\t                    convo.say('Bye!');\n\t                    convo.next();\n\t                    setTimeout(function() {\n\t                        process.exit();\n\t                    }, 3000);\n\t                }\n\t            },\n\t        {\n\t            pattern: bot.utterances.no,\n\t            default: true,\n\t            callback: function(response, convo) {\n\t                convo.say('*Phew!*');\n\t                convo.next();\n\t            }\n\t        }\n\t        ]);\n\t    });\n\t});\n\n\n\tcontroller.hears(['uptime', 'identify yourself', 'who are you', 'what is your name'],\n\t    'direct_message,direct_mention,mention', function(bot, message) {\n\n\t        var hostname = os.hostname();\n\t        var uptime = formatUptime(process.uptime());\n\n\t        bot.reply(message,\n\t            ':robot_face: I am a bot named <@' + bot.identity.name +\n\t             '>. I have been running for ' + uptime + ' on ' + hostname + '.');\n\n\t    });\n\n\tfunction formatUptime(uptime) {\n\t    var unit = 'second';\n\t    if (uptime > 60) {\n\t        uptime = uptime / 60;\n\t        unit = 'minute';\n\t    }\n\t    if (uptime > 60) {\n\t        uptime = uptime / 60;\n\t        unit = 'hour';\n\t    }\n\t    if (uptime != 1) {\n\t        unit = unit + 's';\n\t    }\n\n\t    uptime = uptime + ' ' + unit;\n\t    return uptime;\n\t}\n\n\n};"]}