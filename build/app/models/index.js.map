{"version":3,"sources":["../../../src/app/models/index.js"],"names":[],"mappings":"AAAA;;AAIA;;;;;;AAHA,QAAQ,GAAR,CAAY,8BAAZ;;;;AAIA,iBAAO,IAAP;;AAEA,IAAI,KAAY,QAAQ,IAAR,CAAhB;AACA,IAAI,OAAY,QAAQ,MAAR,CAAhB;AACA,IAAI,YAAY,QAAQ,WAAR,CAAhB;AACA,IAAI,WAAY,KAAK,QAAL,CAAc,OAAO,QAArB,CAAhB;AACA,IAAI,MAAY,QAAQ,GAAR,CAAY,QAAZ,IAAwB,aAAxC;AACA,IAAI,SAAY,QAAQ,YAAY,uBAApB,EAA6C,GAA7C,CAAhB;AACA,IAAI,KAAY,EAAhB;;;;;;;;;;;AAWA,QAAQ,GAAR,CAAY,sBAAZ;AACA,QAAQ,GAAR,CAAY,MAAZ;AACA,IAAI,OAAO,gBAAX,EAA6B;AAC3B,MAAI,YAAY,IAAI,SAAJ,CAAc,QAAQ,GAAR,CAAY,OAAO,gBAAnB,CAAd,CAAhB;AACD,CAFD,MAEO;AACL,MAAI,YAAY,IAAI,SAAJ,CAAc,OAAO,QAArB,EAA+B,OAAO,QAAtC,EAAgD,OAAO,QAAvD,EAAiE,MAAjE,CAAhB;AACD;;AAED,GACG,WADH,CACe,SADf,EAEG,MAFH,CAEU,UAAS,IAAT,EAAe;AACrB,SAAQ,KAAK,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8B,SAAS,QAAvC,IAAqD,KAAK,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKG,OALH,CAKW,UAAS,IAAT,EAAe;AACtB,MAAI,QAAQ,UAAU,QAAV,EAAoB,KAAK,IAAL,CAAU,SAAV,EAAqB,IAArB,CAApB,CAAZ;AACA,KAAG,MAAM,IAAT,IAAiB,KAAjB;AACD,CARH;;AAUA,OAAO,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAwB,UAAS,SAAT,EAAoB;AAC1C,MAAI,GAAG,SAAH,EAAc,SAAlB,EAA6B;AAC3B,OAAG,SAAH,EAAc,SAAd,CAAwB,EAAxB;AACD;AACF,CAJD;;AAMA,GAAG,SAAH,GAAe,SAAf;AACA,GAAG,SAAH,GAAe,SAAf;;AAEA,OAAO,OAAP,GAAiB,EAAjB","file":"index.js","sourcesContent":["'use strict';\nconsole.log(\"in index of sequelize models\");\n\n// env configuration \nimport dotenv from 'dotenv';\ndotenv.load();\n\nvar fs        = require('fs');\nvar path      = require('path');\nvar Sequelize = require('sequelize');\nvar basename  = path.basename(module.filename);\nvar env       = process.env.NODE_ENV || 'development';\nvar config    = require(__dirname + '/../../../config.json')[env];\nvar db        = {};\n\n// this is to handle PG inserts\n// var pg = require('pg');\n// var timestampOID = 1114;\n// pg.types.setTypeParser(1114, function(stringValue) {\n//   console.log(\"STRING VALUES!!\\n\\n\\n\\n\\n\");\n//   console.log(stringValue);\n//   return new Date(Date.parse(stringValue + \"+0000\"));\n// });\n\nconsole.log(\"using sequelize here\");\nconsole.log(config);\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  var sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(function(file) {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(function(file) {\n    var model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(function(modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}